<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd
	">
	
	<!-- 
		use-expressions="true" is necessary to use the "permitAll" expression and similar 
		auto-config="true" adds some services to the application as the logout management when a special url is called and use an html form to login 
	-->
	<http auto-config="true" use-expressions="true">
	
	    <access-denied-handler error-page="/pages/error/accessDenied.jsp"/>
	
	    <!-- ************************************ PUBLIC ACTIONS ********************************* -->
	    <!-- Without this instruction all the css and js files will be blocked -->
		<intercept-url pattern="css/*" filters="none"/>
		<intercept-url pattern="js/*" filters="none"/>		
	
	    <!-- 
	    	NOTE: the "intercept-url" element are evaluated in the list order, when one of them match is used
	    	IMPORTANT: So you must put the most specific matches at the top of the list
	     -->
	
	    <!-- Means Everybody can see the login page without any authentication -->
	    <intercept-url pattern="/index.jsp" filters="none"/>	
	   	
		<!--  ********************************** SECURED ACTIONS ************************************ -->	 
		<intercept-url pattern="/loginAction.action" access="hasAnyRole('ROLE_USER')" />
		
		<intercept-url pattern="/getStoredContenAction.action" access="hasAnyRole('ROLE_USER')" />
		
		<!-- SMS management actions -->		
		<intercept-url pattern="/editSmsAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/confirmEditSmsAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/deleteSmsAction.action" access="hasAnyRole('ROLE_USER')" />
		
		<!-- JOB management actions --> 
		<intercept-url pattern="/addJobAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/confirmAddJobAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/getJobTableAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/editJobAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/confirmEditJobAction.action" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/deleteJobAction.action" access="hasAnyRole('ROLE_USER')" />
	    
	    <!-- 
	    	 ALL the urls (for any roles) in the application are secured: only an authenticated user with the provided role can see the pages and invoke actions
	    	 NOTE: don't use here /** it block all the url (css,js) if the user is not authenticated. 
	    	 Note also expression like hasIpAddress('192.168.1.2')" can be used to block by ip address
	    	 
	    	 List here all the roles available
	    -->		      
	    <intercept-url pattern="/*" access="hasAnyRole('ROLE_USER')"/> 
	  	
		<!-- "login-page" is where is the login form and the "default-target-url" parameter is the struts action where redirect after a successful login -->
		<form-login login-page="/index.jsp" authentication-failure-url="/index.jsp?login_error=1"  default-target-url="/loginAction.action"/>	
		
		<!-- When the user click on a link that point at the url /logout (ie the "logout-url") it cause the logout of the user 
			 the destination url is specified with "logout-success-url" 
	    -->	
		<logout invalidate-session="true" logout-success-url="" logout-url="/logout"/>
		
		<!-- The url that when is called invalidate the session -->
		<session-management invalid-session-url="/index.jsp" />		
		
	</http>	
	
 	<authentication-manager> 
 	 	
 	    <!-- You can have multiple <authentication-provider> elements to define different authentication sources and each will be consulted in turn --> 	    
 		<authentication-provider user-service-ref="employeeDAO" />
		
	</authentication-manager>
	
</beans:beans>